document.addEventListener('DOMContentLoaded', function () {
   const body = document.querySelector('body');

   // Левый "внешний" мир
   const leftSide = document.createElement('div');
   leftSide.classList.add('outside', 'zone');

   // Правый "тюремный" мир
   const rightSide = document.createElement('div');
   rightSide.classList.add('inside', 'zone');

   // Добавляем зоны на страницу
   body.append(leftSide, rightSide);

   let currentCharacter = null;
   let cursorX = 0;
   let cursorY = 0;
   let isTrappedForever = false; // Флаг, указывающий на постоянную блокировку персонажа

   // Обработчик движения мыши
   document.addEventListener('mousemove', (event) => {
      cursorX = event.clientX;
      cursorY = event.clientY;

      if (currentCharacter && currentCharacter.classList.contains('follow')) {
         const jail = rightSide.getBoundingClientRect();
         const charWidth = currentCharacter.offsetWidth;
         const charHeight = currentCharacter.offsetHeight;

         if (!isTrappedForever) {
            // Проверка на попадание в тюрьму
            if (
               cursorX + charWidth / 2 >= jail.left &&
               cursorX - charWidth / 2 <= jail.right &&
               cursorY + charHeight / 2 >= jail.top &&
               cursorY - charHeight / 2 <= jail.bottom
            ) {
               currentCharacter.classList.add('trapped');
               currentCharacter.style.backgroundColor = 'var(--orange)';

               // Ограничиваем движение в пределах тюрьмы
               const clampedX = Math.min(
                  Math.max(cursorX, jail.left + charWidth / 2),
                  jail.right - charWidth / 2
               );
               const clampedY = Math.min(
                  Math.max(cursorY, jail.top + charHeight / 2),
                  jail.bottom - charHeight / 2
               );

               currentCharacter.style.left = `${clampedX - charWidth / 2}px`;
               currentCharacter.style.top = `${clampedY - charHeight / 2}px`;
            } else {
               // Если курсор выходит из тюрьмы, персонаж теряет возможность следовать
               if (currentCharacter.classList.contains('trapped')) {
                  isTrappedForever = true; // Устанавливаем флаг
                  currentCharacter.classList.remove('follow');
               } else {
                  // Свободное движение
                  currentCharacter.style.left = `${cursorX - charWidth / 2}px`;
                  currentCharacter.style.top = `${cursorY - charWidth / 2}px`;
               }
            }
         } else {
            // Если персонаж заблокирован, он остаётся в тюрьме
            const clampedX = Math.min(
               Math.max(cursorX, jail.left + charWidth / 2),
               jail.right - charWidth / 2
            );
            const clampedY = Math.min(
               Math.max(cursorY, jail.top + charHeight / 2),
               jail.bottom - charHeight / 2
            );

            currentCharacter.style.left = `${clampedX - charWidth / 2}px`;
            currentCharacter.style.top = `${clampedY - charHeight / 2}px`;
         }
      }
   });

   // Обработчик клавиатуры
   document.addEventListener('keydown', (event) => {
      const key = event.key;

      if (key === 'Escape') {
         document.querySelectorAll('.character').forEach((char) => char.remove());
         currentCharacter = null;
         isTrappedForever = false; // Сбрасываем состояние блокировки
         return;
      }

      if (/^[a-z]$/.test(key)) {
         if (currentCharacter) {
            currentCharacter.classList.remove('follow');
         }

         const character = document.createElement('div');
         character.classList.add('character', 'follow');
         character.textContent = key;

         character.style.position = 'absolute';
         character.style.left = `${cursorX - 15}px`;
         character.style.top = `${cursorY - 15}px`;
         character.style.backgroundColor = 'rgb(255, 255, 255)';

         const jail = rightSide.getBoundingClientRect();
         if (
            cursorX + 15 >= jail.left &&
            cursorX - 15 <= jail.right &&
            cursorY + 15 >= jail.top &&
            cursorY - 15 <= jail.bottom
         ) {
            character.classList.add('trapped');
            character.style.backgroundColor = 'var(--orange)';
            rightSide.append(character); // Добавляем в тюрьму
         } else {
            leftSide.append(character); // Добавляем на свободу
         }

         body.append(character);
         currentCharacter = character;
         isTrappedForever = false; // Сбрасываем блокировку для нового персонажа
      }
   });
});
